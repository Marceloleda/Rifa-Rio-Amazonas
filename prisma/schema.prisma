generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model buyer {
  id                   Int                    @id @default(autoincrement())
  full_name            String                 @db.VarChar(255)
  email                String                 @unique @db.VarChar(255)
  phone                String                 @unique @db.VarChar(20)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  numbers_reservations numbers_reservations[]
  purchases            purchases[]
}

model consult_numbers {
  id             Int      @id @default(autoincrement())
  raffle_id      Int
  random_numbers Int[]
  ticket_date    DateTime @default(now()) @db.Timestamptz(6)
  raffles        raffles  @relation(fields: [raffle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([random_numbers], map: "idx_reserved_numbers_gin", type: Gin)
}

model numbers_reservations {
  id               Int       @id @default(autoincrement())
  buyer_id         Int
  purchases_id     Int
  raffle_id        Int
  ticket_numbers   Int[]
  payment_status   Boolean   @default(false)
  reservation_date DateTime  @default(now()) @db.Timestamptz(6)
  buyer            buyer     @relation(fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchases        purchases @relation(fields: [purchases_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  raffles          raffles   @relation(fields: [raffle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([ticket_numbers], map: "idx_purchases_ticket_numbers_gin", type: Gin)
}

model purchases {
  id                   Int                    @id @default(autoincrement())
  buyer_id             Int
  raffle_id            Int
  quantity_tickets     Int
  total_value          Decimal                @db.Decimal(10, 2)
  purchase_date        DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  numbers_reservations numbers_reservations[]
  buyer                buyer                  @relation(fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  raffles              raffles                @relation(fields: [raffle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model raffles {
  id                   Int                    @id @default(autoincrement())
  seller_id            Int
  title                String                 @db.VarChar(255)
  description          String
  ticket_price         Decimal                @db.Decimal(10, 2)
  available_tickets    Int
  total_tickets        Int
  start_date           DateTime               @default(now()) @db.Timestamptz(6)
  end_date             DateTime?              @db.Timestamptz(6)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  expire_at            String?                @db.VarChar(255)
  consult_numbers      consult_numbers[]
  numbers_reservations numbers_reservations[]
  purchases            purchases[]
  sellers              sellers                @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sellers {
  id                Int             @id @default(autoincrement())
  name              String          @db.VarChar(255)
  email             String          @unique @db.VarChar(255)
  password_hash     String          @db.VarChar(255)
  phone_number      String          @unique @db.VarChar(20)
  cpf               String          @unique @db.VarChar(15)
  plan              String          @default("Teste") @db.VarChar(255)
  created_at        DateTime        @default(now()) @db.Timestamptz(6)
  updated_at        DateTime        @default(now()) @db.Timestamptz(6)
  total_ticket_plan Int?            @default(100)
  payments_plan     payments_plan[]
  raffles           raffles[]
}

model payments_plan {
  id             Int      @id @default(autoincrement())
  seller_id      Int
  payment_id     String   @db.VarChar(255)
  status_payment String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @default(now()) @db.Timestamptz(6)
  sellers        sellers  @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
